// Code generated by MockGen. DO NOT EDIT.
// Source: aws_client.go

package aws

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// mockClientFromFlags is a mock of client interface
type mockClientFromFlags struct {
	ctrl     *gomock.Controller
	recorder *mockClientFromFlagsMockRecorder
}

// mockClientFromFlagsMockRecorder is the mock recorder for mockClientFromFlags
type mockClientFromFlagsMockRecorder struct {
	mock *mockClientFromFlags
}

// newMockClientFromFlags creates a new mock instance
func newMockClientFromFlags(ctrl *gomock.Controller) *mockClientFromFlags {
	mock := &mockClientFromFlags{ctrl: ctrl}
	mock.recorder = &mockClientFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *mockClientFromFlags) EXPECT() *mockClientFromFlagsMockRecorder {
	return m.recorder
}

// MakeAWSEC2Client mocks base method
func (m *mockClientFromFlags) MakeAWSEC2Client() awsEC2Client {
	ret := m.ctrl.Call(m, "MakeAWSEC2Client")
	ret0, _ := ret[0].(awsEC2Client)
	return ret0
}

// MakeAWSEC2Client indicates an expected call of MakeAWSEC2Client
func (mr *mockClientFromFlagsMockRecorder) MakeEC2Client() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeAWSEC2Client", reflect.TypeOf((*mockClientFromFlags)(nil).MakeAWSEC2Client))
}

// MakeAWSECSClient mocks base method
func (m *mockClientFromFlags) MakeAWSECSClient() awsECSClient {
	ret := m.ctrl.Call(m, "MakeAWSECSClient")
	ret0, _ := ret[0].(awsECSClient)
	return ret0
}

// MakeAWSECSClient indicates an expected call of MakeAWSECSClient
func (mr *mockClientFromFlagsMockRecorder) MakeAWSClient() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeAWSECSClient", reflect.TypeOf((*mockClientFromFlags)(nil).MakeAWSECSClient))
}
